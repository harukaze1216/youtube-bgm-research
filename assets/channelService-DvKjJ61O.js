import{c as w,d as m,q as b,w as g,g as A,a as I}from"./index-6sttVJwr.js";function D(n){const t=n.trim(),e=[/youtube\.com\/channel\/([UC][a-zA-Z0-9_-]{22})/,/youtube\.com\/c\/([a-zA-Z0-9_-]+)/,/youtube\.com\/user\/([a-zA-Z0-9_-]+)/,/youtube\.com\/@([a-zA-Z0-9_-]+)/,/^(UC[a-zA-Z0-9_-]{22})$/];for(const r of e){const s=t.match(r);if(s)return s[1]}return t}async function U(n){var t,e,r,s,o,a,c;try{const u="AIzaSyDN1sTee52txGVYpQwSWgAD7FUr4NNJinQ",y="https://www.googleapis.com/youtube/v3/channels",f=new URLSearchParams({key:u,id:n,part:"snippet,statistics,contentDetails"}),p=await fetch(`${y}?${f}`),h=await p.json();if(!p.ok)throw new Error(((t=h.error)==null?void 0:t.message)||"API呼び出しエラー");if(!h.items||h.items.length===0)throw new Error("チャンネルが見つかりません");const i=h.items[0],l=i.snippet,d=i.statistics;return{channelId:i.id,channelTitle:l.title,description:l.description,thumbnailUrl:((r=(e=l.thumbnails)==null?void 0:e.high)==null?void 0:r.url)||((o=(s=l.thumbnails)==null?void 0:s.default)==null?void 0:o.url),channelUrl:`https://www.youtube.com/channel/${i.id}`,subscriberCount:parseInt(d.subscriberCount)||0,videoCount:parseInt(d.videoCount)||0,totalViews:parseInt(d.viewCount)||0,publishedAt:l.publishedAt,uploadsPlaylistId:(c=(a=i.contentDetails)==null?void 0:a.relatedPlaylists)==null?void 0:c.uploads}}catch(u){throw console.error("チャンネル情報取得エラー:",u),u}}async function k(n){var t;try{const e="AIzaSyDN1sTee52txGVYpQwSWgAD7FUr4NNJinQ",r="https://www.googleapis.com/youtube/v3/playlistItems",s=new URLSearchParams({key:e,playlistId:n,part:"snippet",order:"date",maxResults:1}),o=await fetch(`${r}?${s}`),a=await o.json();if(!o.ok)throw new Error(((t=a.error)==null?void 0:t.message)||"API呼び出しエラー");if(a.items&&a.items.length>0){const c=a.items[0];return{title:c.snippet.title,publishedAt:c.snippet.publishedAt,videoId:c.snippet.resourceId.videoId}}return null}catch(e){return console.error("最初の動画取得エラー:",e),null}}async function v(n){try{const t=w(m,"bgm_channels"),e=b(t,g("channelId","==",n));return!(await A(e)).empty}catch(t){return console.error("チャンネル存在チェックエラー:",t),!1}}function x(n,t){const e=["BGM","instrumental","background music","ambient","lo-fi","lofi","chill","relaxing","study music","meditation","sleep music","インスト","インストゥルメンタル","ヒーリング","リラックス","作業用","勉強用","睡眠用","瞑想","アンビエント"],r=["lyrics","歌詞","vocal","sing","singing","song","rap","talk","podcast","ボーカル","歌","歌い手","トーク","ラップ"],s=`${n} ${t}`.toLowerCase();for(const o of r)if(s.includes(o.toLowerCase()))return!1;for(const o of e)if(s.includes(o.toLowerCase()))return!0;return!1}function _(n,t){try{const e=t?new Date(t.publishedAt):new Date(n.publishedAt),s=(new Date-e)/(1e3*60*60*24*30);if(s<=0)return 0;const a=n.subscriberCount/s/1e3*100;return Math.round(Math.min(a,999))}catch(e){return console.error("成長率計算エラー:",e),0}}async function P(n){try{const t=w(m,"bgm_channels");return await I(t,{...n,createdAt:new Date,addedManually:!0}),!0}catch(t){throw console.error("Firestore保存エラー:",t),t}}export{P as addChannelToFirestore,_ as calculateGrowthRate,v as checkChannelExists,D as extractChannelId,k as fetchChannelFirstVideo,U as fetchChannelInfo,x as isBGMChannel};
