import{c as f,d as y,q as b,w as g,g as A,a as I}from"./index-z6igELq1.js";function D(s){const e=s.trim(),n=[/youtube\.com\/channel\/([UC][a-zA-Z0-9_-]{22})/,/youtube\.com\/c\/([a-zA-Z0-9_-]+)/,/youtube\.com\/user\/([a-zA-Z0-9_-]+)/,/youtube\.com\/@([a-zA-Z0-9_-]+)/,/^(UC[a-zA-Z0-9_-]{22})$/];for(const r of n){const t=e.match(r);if(t)return t[1]}return e}async function $(s){var e,n,r,t,o,c,w;try{const l="AIzaSyDN1sTee52txGVYpQwSWgAD7FUr4NNJinQ",m="https://www.googleapis.com/youtube/v3/channels",i=new URLSearchParams({key:l,id:s,part:"snippet,statistics,contentDetails"}),a=await fetch(`${m}?${i}`),u=await a.json();if(!a.ok)throw new Error(((e=u.error)==null?void 0:e.message)||"API呼び出しエラー");if(!u.items||u.items.length===0)throw new Error("チャンネルが見つかりません");const h=u.items[0],p=h.snippet,d=h.statistics;return{channelId:h.id,channelTitle:p.title,description:p.description,thumbnailUrl:((r=(n=p.thumbnails)==null?void 0:n.high)==null?void 0:r.url)||((o=(t=p.thumbnails)==null?void 0:t.default)==null?void 0:o.url),channelUrl:`https://www.youtube.com/channel/${h.id}`,subscriberCount:parseInt(d.subscriberCount)||0,videoCount:parseInt(d.videoCount)||0,totalViews:parseInt(d.viewCount)||0,publishedAt:p.publishedAt,uploadsPlaylistId:(w=(c=h.contentDetails)==null?void 0:c.relatedPlaylists)==null?void 0:w.uploads}}catch(l){throw console.error("チャンネル情報取得エラー:",l),l}}async function k(s){var e;try{const n="AIzaSyDN1sTee52txGVYpQwSWgAD7FUr4NNJinQ",r="https://www.googleapis.com/youtube/v3/playlistItems";let t=null,o="",c=0;const w=10;console.log(`📹 最初の動画を検索中: ${s}`);do{const l=new URLSearchParams({key:n,playlistId:s,part:"snippet",maxResults:50});o&&l.append("pageToken",o);const m=await fetch(`${r}?${l}`),i=await m.json();if(!m.ok)throw new Error(((e=i.error)==null?void 0:e.message)||"API呼び出しエラー");if(i.items&&i.items.length>0){for(const a of i.items){const u=new Date(a.snippet.publishedAt);(!t||u<new Date(t.publishedAt))&&(t={title:a.snippet.title,publishedAt:a.snippet.publishedAt,videoId:a.snippet.resourceId.videoId})}console.log(`   ページ ${c+1}: ${i.items.length}本の動画をチェック`),console.log(`   現在の最古動画: ${t==null?void 0:t.title} (${t==null?void 0:t.publishedAt})`)}o=i.nextPageToken,c++,await new Promise(a=>setTimeout(a,100))}while(o&&c<w);return console.log(`✅ 最初の動画検索完了: ${(t==null?void 0:t.title)||"なし"}`),t}catch(n){return console.error("最初の動画取得エラー:",n),null}}async function x(s){try{const e=f(y,"bgm_channels"),n=b(e,g("channelId","==",s));return!(await A(n)).empty}catch(e){return console.error("チャンネル存在チェックエラー:",e),!1}}function P(s,e){const n=["BGM","instrumental","background music","ambient","lo-fi","lofi","chill","relaxing","study music","meditation","sleep music","インスト","インストゥルメンタル","ヒーリング","リラックス","作業用","勉強用","睡眠用","瞑想","アンビエント"],r=["lyrics","歌詞","vocal","sing","singing","song","rap","talk","podcast","ボーカル","歌","歌い手","トーク","ラップ"],t=`${s} ${e}`.toLowerCase();for(const o of r)if(t.includes(o.toLowerCase()))return!1;for(const o of n)if(t.includes(o.toLowerCase()))return!0;return!1}function U(s,e){try{const n=e?new Date(e.publishedAt):new Date(s.publishedAt),t=(new Date-n)/(1e3*60*60*24*30);if(t<=0)return 0;const c=s.subscriberCount/t/1e3*100;return Math.round(Math.min(c,999))}catch(n){return console.error("成長率計算エラー:",n),0}}async function _(s){try{const e=f(y,"bgm_channels");return await I(e,{...s,createdAt:new Date,addedManually:!0}),!0}catch(e){throw console.error("Firestore保存エラー:",e),e}}export{_ as addChannelToFirestore,U as calculateGrowthRate,x as checkChannelExists,D as extractChannelId,k as fetchChannelFirstVideo,$ as fetchChannelInfo,P as isBGMChannel};
